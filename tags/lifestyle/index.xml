<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lifestyle on Potato</title><link>https://sneaky-potato.github.io/tags/lifestyle/</link><description>Recent content in Lifestyle on Potato</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 15 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sneaky-potato.github.io/tags/lifestyle/index.xml" rel="self" type="application/rss+xml"/><item><title>The 37% Rule</title><link>https://sneaky-potato.github.io/til/37percent/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/37percent/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
An algorithm which answers the ages old question- &lt;code&gt;is he/she the right one for me?&lt;/code&gt;
&lt;/div&gt;
&lt;p&gt;There are many problems where computer scientists employ interesting algorithms to solve them. One such problem which is often seen in real life is the problem of &lt;a href="https://en.wikipedia.org/wiki/Optimal_stopping"&gt;Optimal Stopping&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also known as &lt;a href="https://en.wikipedia.org/wiki/Secretary_problem"&gt;The Secretary problem&lt;/a&gt; (GFG article on the same- &lt;a href="https://www.geeksforgeeks.org/secretary-problem-optimal-stopping-problem/"&gt;here&lt;/a&gt;), say youâ€™re interviewing a group of applicants for a position, how do you maximize the chances of hiring the single best applicant in the pool? (Once a candidate is rejected, they are gone forever and cannot be recalled.)&lt;/p&gt;</description></item></channel></rss>