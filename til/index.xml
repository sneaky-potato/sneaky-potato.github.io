<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Today I Learned on Potato</title><link>https://sneaky-potato.github.io/til/</link><description>Recent content in Today I Learned on Potato</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 18 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://sneaky-potato.github.io/til/index.xml" rel="self" type="application/rss+xml"/><item><title>Quines</title><link>https://sneaky-potato.github.io/til/quine/</link><pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/quine/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
When programming becomes a piece of art.
&lt;/div&gt;
&lt;h2 id="what-is-it"&gt;What is it?&lt;/h2&gt;
&lt;p&gt;A simple quine is its simplicity is a computer program that takes no input and produces a copy of its own source code as its only output. Think of it as a self replicating program. People have been coding quines for a long time now and have even gone ot the extent of creating more creative and smallest quines possible.
Here is a simple to understand quine written in C:&lt;/p&gt;</description></item><item><title>Rofi and its powerful scripts</title><link>https://sneaky-potato.github.io/til/rofi/</link><pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/rofi/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
When you realize necessity is the mother of invention
&lt;/div&gt;
&lt;h2 id="help-with-sxhkd"&gt;Help with Sxhkd&lt;/h2&gt;
&lt;p&gt;I kept on forgetting the keybindings of my &lt;a href="https://github.com/baskerville/bspwm"&gt;bspwm&lt;/a&gt; + &lt;a href="https://github.com/baskerville/sxhkd"&gt;sxhkd&lt;/a&gt; workflow setup, initially. The obvious solution was to setup a help menu which will help me remember the bindings whenever I needed them. That is when I went on a internet voyage to find such a thing.
To my relief I found the perfect &lt;a href="https://my-take-on.tech/2020/07/03/some-tricks-for-sxhkd-and-bspwm/"&gt;blog&lt;/a&gt; describing this and many cool features we can achieve in the setup when combined with &lt;a href="https://github.com/davatorium/rofi"&gt;rofi&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Year 2038 problem</title><link>https://sneaky-potato.github.io/til/2038/</link><pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/2038/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Classic buffer overflow bug
&lt;/div&gt;
&lt;p&gt;Most computer systems measure unix time- the number of seconds elapsed since the Unix epoch (00:00:00 UTC on 1 January 1970) – and store it in a signed 32-bit integer
However the data type can only store numbers from -(2&lt;!-- raw HTML omitted --&gt;31&lt;!-- raw HTML omitted --&gt;) and (2&lt;!-- raw HTML omitted --&gt;32&lt;!-- raw HTML omitted --&gt; - 1) (random trivia: this number is the &lt;a href="https://en.wikipedia.org/wiki/2,147,483,647"&gt;eighth Mersenne prime&lt;/a&gt;).&lt;/p&gt;</description></item><item><title>Internet Census 2012</title><link>https://sneaky-potato.github.io/til/internet-survey/</link><pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/internet-survey/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Super fast distributed port scanner
&lt;/div&gt;
&lt;p&gt;Just search up Carna botnet and you&amp;rsquo;ll be presented with a picture of world map. This is supposed to be the scan result of &lt;a href="https://en.wikipedia.org/wiki/Carna_botnet"&gt;Carna botnet&lt;/a&gt;.
The idea of this concept was to measure the extent of internet in what the creator called the Internet Census of 2012. The data was collected by infiltrating Internet devices, especially routers, that used a default password or no password at all. It was named after Carna, the Roman goddess for the protection of inner organs and health.&lt;/p&gt;</description></item><item><title>Paul Graham and his essays</title><link>https://sneaky-potato.github.io/til/paul-graham/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/paul-graham/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
More reading material
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Paul_Graham_(programmer)"&gt;Paul Graham&lt;/a&gt; best known for his work on Lisp or his former startup Viaweb (later renamed Yahoo! Store)
But I got to know about this guy from the essays he&amp;rsquo;s written and published on his website&lt;/p&gt;
&lt;p&gt;You can have a look at the full list from &lt;a href="https://paulgraham.com/articles.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve read &lt;a href="https://paulgraham.com/procrastination.html"&gt;Good and Bad Procrastination&lt;/a&gt; and &lt;a href="https://paulgraham.com/trolls.html"&gt;Trolls&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;</description></item><item><title>Fundamental Theorem of Software Engineering</title><link>https://sneaky-potato.github.io/til/fundamental-theorem-se/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/fundamental-theorem-se/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Solution to most of the problems when building software systems
&lt;/div&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Fundamental_theorem_of_software_engineering"&gt;theorem&lt;/a&gt; simply states the following&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We can solve any problem by introducing an extra level of indirection&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Isn&amp;rsquo;t this interesting? The more you read and think about it the context of software systems, the more it makes sense.
And that applies to all layers of abstraction that you know, starting from abstraction in programming languages like C++ to the abstraction in kernel modules and interfaces&lt;/p&gt;</description></item><item><title>The 37% Rule</title><link>https://sneaky-potato.github.io/til/37percent/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/37percent/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
An algorithm which answers the ages old question- &lt;code&gt;is he/she the right one for me?&lt;/code&gt;
&lt;/div&gt;
&lt;p&gt;There are many problems where computer scientists employ interesting algorithms to solve them. One such problem which is often seen in real life is the problem of &lt;a href="https://en.wikipedia.org/wiki/Optimal_stopping"&gt;Optimal Stopping&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also known as &lt;a href="https://en.wikipedia.org/wiki/Secretary_problem"&gt;The Secretary problem&lt;/a&gt; (GFG article on the same- &lt;a href="https://www.geeksforgeeks.org/secretary-problem-optimal-stopping-problem/"&gt;here&lt;/a&gt;), say you’re interviewing a group of applicants for a position, how do you maximize the chances of hiring the single best applicant in the pool? (Once a candidate is rejected, they are gone forever and cannot be recalled.)&lt;/p&gt;</description></item><item><title>The First Wiki</title><link>https://sneaky-potato.github.io/til/wikiwikiweb/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/wikiwikiweb/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
So, you thought wikipedia&amp;rsquo;s the god wiki?
&lt;/div&gt;
&lt;p&gt;The history of wikis dates from 1994, when Ward Cunningham invented the concept and gave it its name. &lt;a href="http://wiki.c2.com/"&gt;C2 wiki&lt;/a&gt; thus became the first wiki, or a website with pages that can be edited via the browser by its own target audience, with a version history for each page.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not sure how many people know about this website (barring the veteran software developers ofc), but if you&amp;rsquo;re interested in software design patterns then this website is nothing less than a rollercoaster ride for you. I mean, did you know there&amp;rsquo;s something known as &lt;a href="http://wiki.c2.com/?PairProgrammingPingPongPattern"&gt;Pair Programming Ping Pong Pattern&lt;/a&gt;?&lt;/p&gt;</description></item><item><title>Gamification</title><link>https://sneaky-potato.github.io/til/gamification/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/gamification/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
That point when game physics make perfect sense.
&lt;/div&gt;
&lt;p&gt;There are only a few games whose physics and mechanics actually make sense. Unironically people use it in non game envronments with the objective of increasing productivity and interaction.&lt;/p&gt;
&lt;p&gt;Honestly successful gamification has sorta become a standard for comparing things. &lt;a href="https://www.duolingo.com/"&gt;Duolingo&lt;/a&gt; in education, &lt;a href="https://www.starbucks.com/rewards"&gt;Starbucks Rewards&lt;/a&gt; in marketing and &lt;a href="https://support.snapchat.com/en-GB/a/snapstreaks"&gt;Snapstreak in Snapchat&lt;/a&gt; are some good examples.&lt;/p&gt;
&lt;p&gt;But what about when gamification is applied to life and basic scheduling in routine, &lt;em&gt;hmm&lt;/em&gt;.&lt;/p&gt;</description></item><item><title>Survivorship Bias</title><link>https://sneaky-potato.github.io/til/survivorship-bias/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/survivorship-bias/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Another super fancy term for something I didn&amp;rsquo;t realize I knew until I read about it.
&lt;/div&gt;
&lt;p&gt;According to Wikipedia (saving you from that extra tab in your overly crowded chrome :)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Survivorship bias, survival bias or immortal time bias is the logical error of concentrating on the people or things that made it past some selection process and overlooking those that did not, typically because of their lack of visibility. This can lead to incorrect conclusions.&lt;/p&gt;</description></item><item><title>Structured Procrastination</title><link>https://sneaky-potato.github.io/til/structured-procrastination/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/structured-procrastination/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Getting things done while procrastinating.
&lt;/div&gt;
&lt;p&gt;There is literally a whole website dedicated to this thing &lt;a href="http://www.structuredprocrastination.com/"&gt;here&lt;/a&gt;.
The footer of the website captures the main idea -&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Site designed by the author&amp;rsquo;s granddaughter, who did the work while avoiding the far more weighty assignment of her literature test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The concept has major intersection with the &lt;a href="https://www.freecodecamp.org/news/live-asynchronously-c8e7172fe7ea/"&gt;living asynchronously&lt;/a&gt; idea (do give it a read as well).&lt;/p&gt;
&lt;p&gt;The whole thing revolves around getting the low priority things done while you&amp;rsquo;re procrastinating the high priority ones. You might not have realized it but at some point you were procrastinating structurally too. I, too found this website while procrastinating some very important stuff.&lt;/p&gt;</description></item><item><title>Devil's Dictionary</title><link>https://sneaky-potato.github.io/til/devils-dictionary/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid>https://sneaky-potato.github.io/til/devils-dictionary/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Finally some innovation on a dictionary.
&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;m no bibliophile but do appreaciate good writing.&lt;br&gt;
That is, while looking for another book to add it to my overflowing stack of &lt;code&gt;not-gonna-read-but-hey-its-cool-ill-read-afterwards&lt;/code&gt; list, (a long pause here) I happened to stumble upon this piece of literature.&lt;/p&gt;
&lt;p&gt;A satirical dictionary written by American journalist Ambrose Bierce, consisting of common words followed by humorous and satirical definitions, I&amp;rsquo;d say it is indeed a fine work of art.&lt;/p&gt;</description></item></channel></rss>