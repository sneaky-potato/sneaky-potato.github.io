<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Potato</title><link>https://example.org/</link><description>Recent content on Potato</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 07 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Trivy, Go's init(), and the Magic of Dynamic Analyzer Discovery</title><link>https://example.org/blog/trivy-analyzers/</link><pubDate>Tue, 07 Oct 2025 00:00:00 +0000</pubDate><guid>https://example.org/blog/trivy-analyzers/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
How Trivy Dynamically Discovers New File Format Analyzers in Go
&lt;/div&gt;
&lt;h2 id="what"&gt;What?&lt;/h2&gt;
&lt;p&gt;I want to discuss a particular design pattern in go through a &lt;a href="https://github.com/aquasecurity/trivy/pull/8897"&gt;PR&lt;/a&gt; which I raised in the open source project &lt;a href="https://github.com/aquasecurity/trivy"&gt;trivy&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="what-is-trivy"&gt;What is trivy?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://trivy.dev"&gt;Trivy&lt;/a&gt; is an open source vulnerability scanner. You could use Trivy to find vulnerabilities (CVE) &amp;amp; misconfigurations (IaC) across code repositories, binary artifacts, container images, Kubernetes clusters, and more.&lt;/p&gt;
&lt;p&gt;Since it is open source it used in extensively in build and deploy pipelines across projects. I used trivy in my build pipelines to scan images, configuration, licenses and most importantly - &lt;strong&gt;vulnerabilities&lt;/strong&gt; in the source code.&lt;/p&gt;</description></item><item><title>Staring inside programs: ELF</title><link>https://example.org/blog/elf/</link><pubDate>Wed, 03 Sep 2025 00:00:00 +0000</pubDate><guid>https://example.org/blog/elf/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
To the level where hexadecimals appear
&lt;/div&gt;
&lt;h2 id="elf"&gt;ELF&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;E&lt;/strong&gt;xtensible and &lt;strong&gt;L&lt;/strong&gt;inkable &lt;strong&gt;F&lt;/strong&gt;ormat is a file format used for executable binaries in the linux operating system.&lt;/p&gt;
&lt;p&gt;However ELFs are used for more than just executables, they are used for storing object files as well as shared libraries.
You can look at a files raw hexadecimal bytes using &lt;code&gt;xxd&lt;/code&gt; and we will use it on ELFs, let us have a look at the first line inside the raw bytes of &lt;code&gt;ls&lt;/code&gt; executable.&lt;/p&gt;</description></item><item><title>Game</title><link>https://example.org/blog/game/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>https://example.org/blog/game/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Game development in golang
&lt;/div&gt;
&lt;h2 id="the-game"&gt;The game&lt;/h2&gt;
&lt;p&gt;WORK IN PROGRESS
&lt;div class="iframe-wrapper"&gt;
&lt;iframe src="https://example.org/game/index.html" title="Sneaky Potato Game" loading="lazy"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;style&gt;
.iframe-wrapper {
position: relative;
width: 100%;
padding-top: 56.25%;
margin: 2rem 0;
}
.iframe-wrapper iframe {
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
border: 1px solid var(--color-border);
background: #000;
}
&lt;/style&gt;
&lt;/p&gt;</description></item><item><title>Dynamics of a dynamic array</title><link>https://example.org/blog/dynamic-array/</link><pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate><guid>https://example.org/blog/dynamic-array/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Memory and this beauty: $(\varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887…$)
&lt;/div&gt;
&lt;h2 id="changing-sizes"&gt;Changing sizes&lt;/h2&gt;
&lt;p&gt;If you do programming you would be familiar with the likes of &lt;code&gt;std::vector&amp;lt;&amp;gt;&lt;/code&gt; or &lt;code&gt;ArrayList&amp;lt;&amp;gt;&lt;/code&gt; or &lt;code&gt;slices&lt;/code&gt;. These are examples of dynamic array.
These are arrays which can change their size during runtime. On the contrary we have static arrays which have their size defined and cannot be changed dynamically.
A natural question is how do these structures grow in size when elements are appended to them?&lt;/p&gt;</description></item><item><title>Quines</title><link>https://example.org/til/quine/</link><pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate><guid>https://example.org/til/quine/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
When programming becomes a piece of art.
&lt;/div&gt;
&lt;h2 id="what-is-it"&gt;What is it?&lt;/h2&gt;
&lt;p&gt;A simple quine is its simplicity is a computer program that takes no input and produces a copy of its own source code as its only output. Think of it as a self replicating program. People have been coding quines for a long time now and have even gone ot the extent of creating more creative and smallest quines possible.
Here is a simple to understand quine written in C:&lt;/p&gt;</description></item><item><title>Down the linux rabbit hole</title><link>https://example.org/blog/arch_linux/</link><pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate><guid>https://example.org/blog/arch_linux/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Assembling real linux OS experience
&lt;/div&gt;
&lt;p&gt;You cannot call yourself an absolute madlad if you&amp;rsquo;ve not taken this step in your sorry peaceful life.&lt;/p&gt;
&lt;h2 id="one-way-trip"&gt;One way trip&lt;/h2&gt;
&lt;p&gt;I had manjaro installed in my main SSD and for the most part is was awesome, until it (&lt;em&gt;drumrolls&lt;/em&gt;) &lt;em&gt;&lt;strong&gt;wasn&amp;rsquo;t&lt;/strong&gt;&lt;/em&gt;. I backed up every important config folder and my work directories in my hard drive.&lt;/p&gt;
&lt;p&gt;Next thing, I installed Arch Linux in my hard drive (I was sceptical and hesitant) and setup &lt;code&gt;bspwm&lt;/code&gt; &lt;code&gt;polybar&lt;/code&gt; &lt;code&gt;sxhkd&lt;/code&gt; and &lt;code&gt;rofi&lt;/code&gt; to test things out. There was nothing, no frontend, it felt like a server without pages, can&amp;rsquo;t control brightness, had to setup audio, everything felt like a punch in the face, a blissful punch.&lt;/p&gt;</description></item><item><title>Rofi and its powerful scripts</title><link>https://example.org/til/rofi/</link><pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate><guid>https://example.org/til/rofi/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
When you realize necessity is the mother of invention
&lt;/div&gt;
&lt;h2 id="help-with-sxhkd"&gt;Help with Sxhkd&lt;/h2&gt;
&lt;p&gt;I kept on forgetting the keybindings of my &lt;a href="https://github.com/baskerville/bspwm"&gt;bspwm&lt;/a&gt; + &lt;a href="https://github.com/baskerville/sxhkd"&gt;sxhkd&lt;/a&gt; workflow setup, initially. The obvious solution was to setup a help menu which will help me remember the bindings whenever I needed them. That is when I went on a internet voyage to find such a thing.
To my relief I found the perfect &lt;a href="https://my-take-on.tech/2020/07/03/some-tricks-for-sxhkd-and-bspwm/"&gt;blog&lt;/a&gt; describing this and many cool features we can achieve in the setup when combined with &lt;a href="https://github.com/davatorium/rofi"&gt;rofi&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Year 2038 problem</title><link>https://example.org/til/2038/</link><pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate><guid>https://example.org/til/2038/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Classic buffer overflow bug
&lt;/div&gt;
&lt;p&gt;Most computer systems measure unix time- the number of seconds elapsed since the Unix epoch (00:00:00 UTC on 1 January 1970) – and store it in a signed 32-bit integer
However the data type can only store numbers from -(2&lt;!-- raw HTML omitted --&gt;31&lt;!-- raw HTML omitted --&gt;) and (2&lt;!-- raw HTML omitted --&gt;32&lt;!-- raw HTML omitted --&gt; - 1) (random trivia: this number is the &lt;a href="https://en.wikipedia.org/wiki/2,147,483,647"&gt;eighth Mersenne prime&lt;/a&gt;).&lt;/p&gt;</description></item><item><title>Internet Census 2012</title><link>https://example.org/til/internet-survey/</link><pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate><guid>https://example.org/til/internet-survey/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Super fast distributed port scanner
&lt;/div&gt;
&lt;p&gt;Just search up Carna botnet and you&amp;rsquo;ll be presented with a picture of world map. This is supposed to be the scan result of &lt;a href="https://en.wikipedia.org/wiki/Carna_botnet"&gt;Carna botnet&lt;/a&gt;.
The idea of this concept was to measure the extent of internet in what the creator called the Internet Census of 2012. The data was collected by infiltrating Internet devices, especially routers, that used a default password or no password at all. It was named after Carna, the Roman goddess for the protection of inner organs and health.&lt;/p&gt;</description></item><item><title>Paul Graham and his essays</title><link>https://example.org/til/paul-graham/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><guid>https://example.org/til/paul-graham/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
More reading material
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Paul_Graham_(programmer)"&gt;Paul Graham&lt;/a&gt; best known for his work on Lisp or his former startup Viaweb (later renamed Yahoo! Store)
But I got to know about this guy from the essays he&amp;rsquo;s written and published on his website&lt;/p&gt;
&lt;p&gt;You can have a look at the full list from &lt;a href="https://paulgraham.com/articles.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve read &lt;a href="https://paulgraham.com/procrastination.html"&gt;Good and Bad Procrastination&lt;/a&gt; and &lt;a href="https://paulgraham.com/trolls.html"&gt;Trolls&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;</description></item><item><title>Fundamental Theorem of Software Engineering</title><link>https://example.org/til/fundamental-theorem-se/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://example.org/til/fundamental-theorem-se/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Solution to most of the problems when building software systems
&lt;/div&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Fundamental_theorem_of_software_engineering"&gt;theorem&lt;/a&gt; simply states the following&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We can solve any problem by introducing an extra level of indirection&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Isn&amp;rsquo;t this interesting? The more you read and think about it the context of software systems, the more it makes sense.
And that applies to all layers of abstraction that you know, starting from abstraction in programming languages like C++ to the abstraction in kernel modules and interfaces&lt;/p&gt;</description></item><item><title>Bucket List</title><link>https://example.org/blog/bucket-list/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://example.org/blog/bucket-list/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Ayy, how much for that large bucket over there, sir?
&lt;/div&gt;
&lt;p&gt;Classic cringe-full bucket list, will keep updating this.&lt;/p&gt;
&lt;h2 id="to-do-before-graduation"&gt;To-do-before-graduation&lt;/h2&gt;
&lt;p&gt;I came to campus in my 4th semester. I don&amp;rsquo;t think I can ever claim that I know my campus in and out (even on my last day here as a student). There&amp;rsquo;s just too many corners and nooks here. The following list doesn&amp;rsquo;t make much sense, but hey, atleast I&amp;rsquo;ll have something to look forward to till then.&lt;/p&gt;</description></item><item><title>Glitch 101 Guide</title><link>https://example.org/blog/on/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://example.org/blog/on/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
~(~1).
&lt;/div&gt;
&lt;p&gt;I act like normal people, almost everyday but then I relax a bit and do weird stuff. Idk, it feels like I&amp;rsquo;m the &amp;ldquo;normal&amp;rdquo; guy at that time.&lt;/p&gt;
&lt;h2 id="why-are-you-writing-right-now"&gt;Why are you writing right now?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Must leave this information, else they won&amp;rsquo;t be able to know. This is our only form of communication. The last hope.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Even I wouldn&amp;rsquo;t expect myself to be this so descriptive lol. That&amp;rsquo;s like too much verbose.&lt;/p&gt;</description></item><item><title>Writing</title><link>https://example.org/blog/literature/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://example.org/blog/literature/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
You got me with &amp;rsquo;em thicc words (◡‿◡*).
&lt;/div&gt;
&lt;p&gt;I always wanted to try out writing. Classic English writing, that is, other than the assembly-directive-shenanigans that I&amp;rsquo;m writing nowadays for my assignments (T_T).&lt;/p&gt;
&lt;h2 id="blog"&gt;Blog&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Lol, talking about my blog in another one of my blogs, recursive literature or wot (Related note- &lt;a href="https://stackingthebricks.com/how-blogs-broke-the-web/"&gt;How Blogs Broke The Web&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I started this blog with nothing particular in my mind. Main objective was to setup the website and maybe show people about what I like / do behind the screen.&lt;/p&gt;</description></item><item><title>The 37% Rule</title><link>https://example.org/til/37percent/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://example.org/til/37percent/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
An algorithm which answers the ages old question- &lt;code&gt;is he/she the right one for me?&lt;/code&gt;
&lt;/div&gt;
&lt;p&gt;There are many problems where computer scientists employ interesting algorithms to solve them. One such problem which is often seen in real life is the problem of &lt;a href="https://en.wikipedia.org/wiki/Optimal_stopping"&gt;Optimal Stopping&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also known as &lt;a href="https://en.wikipedia.org/wiki/Secretary_problem"&gt;The Secretary problem&lt;/a&gt; (GFG article on the same- &lt;a href="https://www.geeksforgeeks.org/secretary-problem-optimal-stopping-problem/"&gt;here&lt;/a&gt;), say you’re interviewing a group of applicants for a position, how do you maximize the chances of hiring the single best applicant in the pool? (Once a candidate is rejected, they are gone forever and cannot be recalled.)&lt;/p&gt;</description></item><item><title>The First Wiki</title><link>https://example.org/til/wikiwikiweb/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://example.org/til/wikiwikiweb/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
So, you thought wikipedia&amp;rsquo;s the god wiki?
&lt;/div&gt;
&lt;p&gt;The history of wikis dates from 1994, when Ward Cunningham invented the concept and gave it its name. &lt;a href="http://wiki.c2.com/"&gt;C2 wiki&lt;/a&gt; thus became the first wiki, or a website with pages that can be edited via the browser by its own target audience, with a version history for each page.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not sure how many people know about this website (barring the veteran software developers ofc), but if you&amp;rsquo;re interested in software design patterns then this website is nothing less than a rollercoaster ride for you. I mean, did you know there&amp;rsquo;s something known as &lt;a href="http://wiki.c2.com/?PairProgrammingPingPongPattern"&gt;Pair Programming Ping Pong Pattern&lt;/a&gt;?&lt;/p&gt;</description></item><item><title>Gamification</title><link>https://example.org/til/gamification/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://example.org/til/gamification/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
That point when game physics make perfect sense.
&lt;/div&gt;
&lt;p&gt;There are only a few games whose physics and mechanics actually make sense. Unironically people use it in non game envronments with the objective of increasing productivity and interaction.&lt;/p&gt;
&lt;p&gt;Honestly successful gamification has sorta become a standard for comparing things. &lt;a href="https://www.duolingo.com/"&gt;Duolingo&lt;/a&gt; in education, &lt;a href="https://www.starbucks.com/rewards"&gt;Starbucks Rewards&lt;/a&gt; in marketing and &lt;a href="https://support.snapchat.com/en-GB/a/snapstreaks"&gt;Snapstreak in Snapchat&lt;/a&gt; are some good examples.&lt;/p&gt;
&lt;p&gt;But what about when gamification is applied to life and basic scheduling in routine, &lt;em&gt;hmm&lt;/em&gt;.&lt;/p&gt;</description></item><item><title>Survivorship Bias</title><link>https://example.org/til/survivorship-bias/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><guid>https://example.org/til/survivorship-bias/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Another super fancy term for something I didn&amp;rsquo;t realize I knew until I read about it.
&lt;/div&gt;
&lt;p&gt;According to Wikipedia (saving you from that extra tab in your overly crowded chrome :)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Survivorship bias, survival bias or immortal time bias is the logical error of concentrating on the people or things that made it past some selection process and overlooking those that did not, typically because of their lack of visibility. This can lead to incorrect conclusions.&lt;/p&gt;</description></item><item><title>A Computer Vision Problem</title><link>https://example.org/blog/cv/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate><guid>https://example.org/blog/cv/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
An interesting Computer Vision problem with all my approaches and an elegant solution.
&lt;/div&gt;
&lt;p&gt;Original problem statement file and required files &lt;a href="https://drive.google.com/drive/folders/1BDYyxglyihcEPfUyxoK2Iq1567Ymt3PN?usp=sharing"&gt;here&lt;/a&gt;. This problem was given to me in my sophomore year as a task under my tenure in the ARK perception team.&lt;/p&gt;
&lt;p&gt;I haven&amp;rsquo;t done robotics in a long while (am writing this thing after leaving all that stuff behind), this being the only testimony of me having done those courses on image processing lol.&lt;/p&gt;</description></item><item><title>Structured Procrastination</title><link>https://example.org/til/structured-procrastination/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://example.org/til/structured-procrastination/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Getting things done while procrastinating.
&lt;/div&gt;
&lt;p&gt;There is literally a whole website dedicated to this thing &lt;a href="http://www.structuredprocrastination.com/"&gt;here&lt;/a&gt;.
The footer of the website captures the main idea -&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Site designed by the author&amp;rsquo;s granddaughter, who did the work while avoiding the far more weighty assignment of her literature test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The concept has major intersection with the &lt;a href="https://www.freecodecamp.org/news/live-asynchronously-c8e7172fe7ea/"&gt;living asynchronously&lt;/a&gt; idea (do give it a read as well).&lt;/p&gt;
&lt;p&gt;The whole thing revolves around getting the low priority things done while you&amp;rsquo;re procrastinating the high priority ones. You might not have realized it but at some point you were procrastinating structurally too. I, too found this website while procrastinating some very important stuff.&lt;/p&gt;</description></item><item><title>My Dynamic Duo</title><link>https://example.org/blog/my-dynamic-duo/</link><pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate><guid>https://example.org/blog/my-dynamic-duo/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Disclaimer: This post is absolutely not about my butt curves. Now let’s start this thing off with a boring-made-up quote&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When it comes to building / learning stuff one can never and should never forget the tools which led them to tangible feat. Things get real serious when those tools happen to be the very same dark-shiny-squarish boxes which filled your eyes with a childish glossom (maybe?) when they arrived. (I mean, I have my algorithms lab tomorrow and I’m still writing this blog, c’mon man it’s dead serious)&lt;/p&gt;</description></item><item><title>About</title><link>https://example.org/about/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://example.org/about/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
&lt;em&gt;gasps&lt;/em&gt; here we go
&lt;/div&gt;
&lt;h2 id="hi-there"&gt;Hi there&lt;/h2&gt;
&lt;p&gt;You are currently having a one-sided-textual-probably-monotonous-(tryhard?)-talk with me through this page.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Not one-sided anymore, thanks to &lt;a href="https://utteranc.es/"&gt;utterances&lt;/a&gt;, feel free to comment on this or any of my posts that you find interesting. &lt;strong&gt;Dire&lt;/strong&gt; need of some activity here :P)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m an undergraduate student from the department of &lt;strong&gt;Computer Science and Engineering&lt;/strong&gt; at &lt;strong&gt;Indian Institute of Technology, Kharagpur&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In my free time you&amp;rsquo;d probably find me watching some anime series, reading some book or reading one of the blogs I follow.&lt;/p&gt;</description></item><item><title>take-off.yml</title><link>https://example.org/blog/take-off/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://example.org/blog/take-off/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Cuz why not?
&lt;/div&gt;
&lt;p&gt;How to cliché recipe 101&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make a website using some &lt;a href="https://www.cloudflare.com/en-in/learning/performance/static-site-generator/"&gt;SSG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;start adding blog posts on it&lt;/li&gt;
&lt;li&gt;talk about pHiLoSoPhY, lIfEsTyLe, lItErAtUrE and mostly non-tech (disguised attempt to gain social points :clown:)&lt;/li&gt;
&lt;li&gt;&lt;img src="https://example.org/stonks_doge.jpg" alt="stonk_doge"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Yup, acting like that cool doge is the final step in the recipe)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sighs&lt;/em&gt;, I’ll try my best to make the content a little interesting atleast so please bear with my nagging :x&lt;/p&gt;</description></item><item><title>Devil's Dictionary</title><link>https://example.org/til/devils-dictionary/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid>https://example.org/til/devils-dictionary/</guid><description>&lt;div class="lead !mb-9 text-xl"&gt;
Finally some innovation on a dictionary.
&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;m no bibliophile but do appreaciate good writing.&lt;br&gt;
That is, while looking for another book to add it to my overflowing stack of &lt;code&gt;not-gonna-read-but-hey-its-cool-ill-read-afterwards&lt;/code&gt; list, (a long pause here) I happened to stumble upon this piece of literature.&lt;/p&gt;
&lt;p&gt;A satirical dictionary written by American journalist Ambrose Bierce, consisting of common words followed by humorous and satirical definitions, I&amp;rsquo;d say it is indeed a fine work of art.&lt;/p&gt;</description></item></channel></rss>